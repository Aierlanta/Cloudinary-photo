// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 图片模型
model Image {
  id          String   @id @default(cuid())
  url         String   // Cloudinary URL
  publicId    String   // Cloudinary public ID
  title       String?  // 图片标题
  description String?  // 图片描述
  tags        String?  // 标签，JSON字符串格式
  groupId     String?  // 所属分组ID
  uploadedAt  DateTime @default(now())
  
  // 关联分组
  group       Group?   @relation(fields: [groupId], references: [id], onDelete: SetNull)
  
  @@map("images")
}

// 分组模型
model Group {
  id          String   @id @default(cuid())
  name        String   @unique // 分组名称
  description String?  // 分组描述
  imageCount  Int      @default(0) // 图片数量
  createdAt   DateTime @default(now())
  
  // 关联图片
  images      Image[]
  
  @@map("groups")
}

// API配置模型
model APIConfig {
  id                   String   @id @default("default")
  isEnabled            Boolean  @default(true) // API是否启用
  defaultScope         String   @default("all") // 默认范围：all, group
  defaultGroups        String?  @db.Text // 默认分组，JSON字符串格式
  allowedParameters    String?  @db.Text // 允许的参数，JSON字符串格式
  enableDirectResponse Boolean  @default(false) // 是否启用直接响应模式
  updatedAt            DateTime @default(now()) @updatedAt

  @@map("api_configs")
}

// 计数器模型（用于生成递增ID）
model Counter {
  id       String @id
  value    Int    @default(0)

  @@map("counters")
}

// 系统日志模型
model SystemLog {
  id          String   @id @default(cuid())
  timestamp   DateTime @default(now())
  level       Int      // 日志级别：0=DEBUG, 1=INFO, 2=WARN, 3=ERROR
  message     String   @db.Text // 日志消息
  context     String?  @db.Text // 上下文信息，JSON字符串格式
  error       String?  @db.Text // 错误信息，JSON字符串格式
  userId      String?  // 用户ID（如果相关）
  requestId   String?  // 请求ID
  ip          String?  // IP地址
  userAgent   String?  @db.Text // 用户代理
  type        String?  // 日志类型：api_request, api_response, database, user_action, security等

  @@index([timestamp])
  @@index([level])
  @@index([type])
  @@index([userId])
  @@map("system_logs")
}
